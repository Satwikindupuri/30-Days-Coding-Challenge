/*
ðŸ”¹ Problem: 387. First Unique Character in a String
ðŸ”— Platform: Leetcode
ðŸ”— Link: https://leetcode.com/problems/first-unique-character-in-a-string/description/
âœ… Status: Solved
Description: Given a strings, find the first non-repeating character in it and return its index. If it does not exist, return -1.

ðŸ§¾ Notes: Used LinkedHashMap to collect the characters and Frequency and then checked the first single appeared character then returned.
*/

class Solution {
    public int firstUniqChar(String s) {
        HashMap<Character,Integer> hm=new LinkedHashMap<>();
        for(int i=0;i<s.length();i++)
        {
            char ch=s.charAt(i);
            hm.put(ch,hm.getOrDefault(ch,0)+1);
        }
        for(char key:hm.keySet())
        {
            if(hm.get(key)==1)
            {
                return s.indexOf(key);
            }
        }
        return -1;
    }
}